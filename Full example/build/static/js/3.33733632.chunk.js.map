{"version":3,"sources":["components/EditProduct.js","components/ListProducts.js"],"names":["EditProduct","props","state","currentProduct","change","event","value","target","propName","name","product","setState","changePrice","price","parseFloat","save","onSave","cancel","onCancel","console","log","this","id","className","onChange","description","type","onClick","Component","ListProducts","products","selectedProduct","editProductRef","React","createRef","fetch","a","auth","headers","Authorization","accessToken","trackPromise","axios","get","url","resp","data","delete","productId","alert","edit","editUpdate","updatedProduct","put","editCancel","message","process","map","item","index","style","display","flexFlow","justifyContent","renderProducts","ref","nxtprops","PureComponent","connect","reduxState"],"mappings":"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","file":"static/js/3.33733632.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\n\r\nclass EditProduct extends Component {\r\n\r\n    state = {\r\n        currentProduct: null\r\n    };\r\n     \r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state.currentProduct = this.props.product;\r\n        console.log(\"[EditProduct] constructor\");\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        console.log(\"[EditProduct] componentWillUnmount\");\r\n    }\r\n\r\n    change = (event) => {\r\n\r\n        const value = event.target.value;\r\n        const propName =  event.target.name;\r\n\r\n        const product = {...this.state.currentProduct};\r\n        product[propName] = value;\r\n\r\n        this.setState({\r\n            currentProduct: product\r\n        });\r\n\r\n    }\r\n\r\n    changePrice = (event) => {\r\n\r\n        const value = event.target.value;\r\n        //const propName =  event.target.name;\r\n\r\n        const product = {...this.state.currentProduct};\r\n        product.price = value ? parseFloat(value) : value;\r\n\r\n        this.setState({\r\n            currentProduct: product\r\n        });\r\n\r\n    }\r\n    save = () => {\r\n\r\n        if(this.props.onSave){\r\n            this.props.onSave(this.state.currentProduct);\r\n        }\r\n    }\r\n    cancel = () => {\r\n        if(this.props.onCancel){\r\n            this.props.onCancel(\"Operation cancelled\");\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        const currentProduct = this.state.currentProduct;\r\n\r\n        return (\r\n            <div>\r\n                <h4>Edit Product: ID {currentProduct.id}</h4>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Name</label>\r\n                    <input className=\"form-control\" name=\"name\" value={currentProduct.name} \r\n                                                                        onChange={this.change}/>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label>Description</label>\r\n                    <input className=\"form-control\" name=\"description\" value={currentProduct.description} onChange={this.change}/>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label>Price</label>\r\n                    <input type=\"number\" className=\"form-control\" \r\n                                    value={currentProduct.price} onChange={this.changePrice}/>\r\n                </div>\r\n                <div>\r\n                    <button className=\"btn btn-primary\" onClick={this.save}>Save</button>&nbsp;\r\n                    <button className=\"btn\" onClick={this.cancel}>Cancel</button>\r\n                </div>\r\n            </div>\r\n        )\r\n\r\n    }\r\n\r\n    // static getDerivedStateFromProps(nextProps, currentState){\r\n    //     //return null, if there no state change\r\n    //     // return the new state if stage changes\r\n    //     if(nextProps.product.id !== currentState.currentProduct.id){\r\n    //         return {\r\n    //             ...currentState,\r\n    //             currentProduct : nextProps.product\r\n    //         };\r\n    //     }\r\n\r\n    //     return null;\r\n    // }\r\n}\r\n\r\nexport default EditProduct;","import React, {Component, PureComponent} from 'react';\r\nimport axios from 'axios';\r\nimport './ListProducts.css'\r\nimport EditProduct from './EditProduct';\r\nimport { trackPromise } from 'react-promise-tracker';\r\nimport {connect} from 'react-redux';\r\n\r\nclass ListProducts extends PureComponent{\r\n\r\n    // immutable\r\n    state = {\r\n        products: [],\r\n        selectedProduct: null,\r\n        \r\n    };\r\n    //url = \"http://localhost:9000/products\";\r\n    editProductRef = React.createRef(null);\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.url = process.env.REACT_APP_PRODUCTS_URL;\r\n        console.log(\"[ListProducts] constructor\");\r\n    }\r\n\r\n    async componentDidMount() {\r\n\r\n        console.log(\"[ListProducts] componentDidMount\");\r\n        //const url = \"http://localhost:9000/products\";\r\n\r\n        // axios.get(url).then((resp) => {\r\n        //     console.log(\"success\", resp);\r\n        // }, (error) => {\r\n        //     console.log(\"error\", error);\r\n        // });\r\n\r\n        this.fetch();\r\n\r\n    }\r\n\r\n    fetch = async () => {\r\n        try {\r\n\r\n            const auth = this.props.auth;\r\n            const headers = {Authorization : `Bearer ${auth.accessToken}`}\r\n            const resp = await trackPromise(axios.get(this.url, {headers: headers}));\r\n            console.log(\"success\", resp);\r\n            this.setState({\r\n                products: resp.data\r\n            });\r\n\r\n        }catch(error){\r\n\r\n            console.log(\"error\", error);\r\n        }\r\n    }\r\n    delete = async (productId) => {\r\n\r\n        const url = this.url + \"/\" + productId;\r\n        try {\r\n            \r\n            const auth = this.props.auth;\r\n            const headers = {Authorization : `Bearer ${auth.accessToken}`}\r\n            const resp = await trackPromise(axios.delete(url, {headers}));\r\n            this.fetch();\r\n            // const c_products = [...this.state.products];\r\n            // const index = c_products.findIndex(item => item.id === productId);\r\n            \r\n            // if(index != -1){\r\n            //     c_products.splice(index, 1);\r\n            //     this.setState({\r\n            //         products: c_products\r\n            //     });\r\n            // }\r\n\r\n            alert(\"deleted\");\r\n\r\n        } catch (error) {\r\n\r\n            alert(\"failed to delete\");\r\n        }\r\n    }\r\n    edit = (product) => {\r\n        this.setState({\r\n            selectedProduct: product\r\n        });\r\n    }\r\n    editUpdate = async (updatedProduct)=> {\r\n        console.log(\"editUpdate\", updatedProduct);\r\n        try {\r\n            \r\n            const auth = this.props.auth;\r\n            const headers = {Authorization : `Bearer ${auth.accessToken}`}\r\n            const url = this.url + \"/\" + updatedProduct.id;\r\n            const resp = await trackPromise(axios.put(url, updatedProduct, {headers}));\r\n            this.fetch();\r\n            this.setState({\r\n                selectedProduct: null\r\n            });\r\n        } catch (e) {\r\n            alert(\"Failed to update\");\r\n        }\r\n\r\n    }\r\n\r\n    editCancel = (message) => {\r\n\r\n        console.log(\"editProductRef\", this.editProductRef);\r\n        console.log(\"editCancel\", message);\r\n        // this.setState({\r\n        //     selectedProduct: null\r\n        // });\r\n    }\r\n    renderProducts(){\r\n        return this.state.products.map((item, index) => {\r\n\r\n            return (\r\n                <div data-testid=\"product\" className=\"product\" key={item.id}>\r\n                    {/* <p>Product: {item}</p> */}\r\n                    <p>Id: {item.id}</p>\r\n                    <p>Name: {item.name}</p>\r\n                    <p>Price: {item.price}</p>\r\n                    <p>Description: {item.description}</p>\r\n                    <div>\r\n                        <button className=\"btn btn-danger\" onClick={() => {this.delete(item.id)}}>Delete</button>\r\n                            &nbsp; &nbsp;\r\n                        <button className=\"btn btn-warning\" onClick={() => {this.edit(item)}}>Edit</button>\r\n                    </div>\r\n                </div>\r\n            )\r\n\r\n        } )\r\n    }\r\n\r\n    render() {\r\n\r\n        console.log(\"[ListProducts] render\");\r\n        return (\r\n            <div>\r\n                <h3>Products</h3>\r\n                <div style={{display: \"flex\", flexFlow: \"row wrap\", justifyContent: \"center\"}}>\r\n                    {this.renderProducts()}\r\n                </div>\r\n                <div>\r\n                    {/* <input value={this.state.selectedProduct.id} onChange={this.change } /> */}\r\n                    {this.state.selectedProduct !== null ? \r\n                        <EditProduct  key={this.state.selectedProduct.id} \r\n                                    ref={this.editProductRef}\r\n                                    product={this.state.selectedProduct}\r\n                                    onSave={this.editUpdate}\r\n                                    onCancel={this.editCancel}/> : null}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    componentWillMount(){\r\n        console.log(\"[ListProducts] componentWillMount\");\r\n    }\r\n    componentWillReceiveProps(nxtprops){\r\n        console.log(\"[ListProducts] componentWillReceiveProps\");\r\n    }\r\n    // shouldComponentUpdate(nxtProps, nxtState){\r\n    //     console.log(\"[ListProducts] shouldComponentUpdate\");\r\n    //     return true;\r\n    // }\r\n    componentWillUpdate(){\r\n        console.log(\"[ListProducts] componentWillUpdate\");\r\n    }\r\n    componentDidUpdate(){\r\n        console.log(\"[ListProducts] componentDidUpdate\");\r\n    }\r\n    componentWillUnmount(){\r\n        console.log(\"[ListProducts] componentWillUnmount\");\r\n    }\r\n\r\n}\r\nconst mapStateToProps = (reduxState) => {\r\n\r\n    return {\r\n        auth: reduxState.auth\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps)(ListProducts);"],"sourceRoot":""}