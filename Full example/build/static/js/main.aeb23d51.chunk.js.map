{"version":3,"sources":["redux/action-creators.js","components/Input.js","components/Login.js","components/GadgetShop.js","components/WithBorderHOC.js","components/Hello.js","components/Counter.js","components/ViewCart.js","routes.js","components/ProtectedRoute.js","components/MuiApp.js","reportWebVitals.js","redux/store.js","context/AppTheme.js","context/AppThemeProvider.js","components/LoadingSpinnerComponent.js","components/AppErrorBoundary.js","index.js"],"names":["createSetAuthAction","payload","type","Input","props","title","otherProps","className","Login","console","log","useState","userName","setUserName","password","setPassword","message","setMessage","dispatch","useDispatch","a","process","trackPromise","axios","post","name","response","isAuthenticated","accessToken","data","refreshToken","history","push","useEffect","value","onChange","e","target","onClick","GadgetShop","Array","fill","values","setValues","products","useSelector","state","cart","auth","enqueueSnackbar","useSnackbar","headers","Authorization","get","fetchFromStore","productsView","map","item","index","description","price","placeholder","updatedValues","setQuantity","href","product","quantity","variant","addToCart","renderProducts","withBorder","Component","style","border","toUpperCase","Date","toISOString","count","inputRef","React","createRef","inc","evt","updatedCount","setState","change","updateCount","parseInt","update","current","decr","bind","this","id","ref","ViewCart","remove","prdId","removeCartItem","PureComponent","connect","reduxState","productId","routes","component","icon","path","secure","Hello","Counter","lazy","ProtectedRoute","to","AppNavigationList","useHistory","renderSecure","navigate","onSelect","List","ListItem","button","ListItemIcon","ListItemText","primary","App","drawerState","setDrawerState","Grid","container","spacing","xs","AppBar","position","Toolbar","IconButton","size","edge","color","sx","mr","Typography","flexGrow","Button","Drawer","width","flexShrink","boxSizing","anchor","open","onClose","Divider","fallback","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","authState","cartState","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","combineReducers","currentState","action","findIndex","splice","applyMiddleware","next","getState","result","thunk","AppTheme","createContext","initThemeState","mode","reducer","AppThemeProvider","useReducer","Provider","children","LoadingSpinnerComponent","promiseInProgress","usePromiseTracker","AppErrorBoundary","hasError","error","info","ReactDOM","render","StrictMode","maxSnack","anchorOrigin","vertical","horizontal","document","getElementById"],"mappings":"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","file":"static/js/main.aeb23d51.chunk.js","sourcesContent":["import axios from 'axios';\r\nimport { trackPromise } from 'react-promise-tracker';\r\n\r\nexport const createSetAuthAction = (payload)=> {\r\n    return {\r\n        type: \"SET_AUTH\",\r\n        payload: payload\r\n    }\r\n}\r\n\r\nexport const createAddToCartAction = (payload)=> {\r\n    return {\r\n        type: \"ADDTOCART\",\r\n        payload: payload\r\n    }\r\n}\r\n\r\nexport const createRemoveCartItemAction = (productId)=> {\r\n    return {\r\n        type: \"REMOVECARTITEM\",\r\n        productId: productId\r\n    }\r\n}\r\n\r\nexport const createGetProductsAction = (accessToken) => {\r\n    return async (dispatch) => {\r\n        //api call\r\n        //return an action(object)\r\n        const url = process.env.REACT_APP_PRODUCTS_URL;\r\n        try {\r\n            \r\n          \r\n            const headers = {Authorization : `Bearer ${accessToken}`}\r\n            const response = await trackPromise(axios.get(url, {headers}));\r\n            dispatch({\r\n                type: \"GETPRODUCTS\",\r\n                payload: response.data\r\n            });\r\n\r\n        } catch (err) {\r\n            \r\n        }\r\n    };\r\n}\r\n\r\n\r\n","\r\n\r\n{/* <Input title=\"UserName\" onChange={setUserName(e.target.value)} value={} placeholder=\"\"*/}\r\n\r\nfunction Input(props){\r\n\r\n    const {title, ...otherProps} = props;\r\n\r\n    return (\r\n        <div className=\"form-group\">\r\n                <label>{title}</label>\r\n                <input className=\"form-control\" {...otherProps}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Input;","import React, {useState, useEffect} from 'react';\r\nimport axios from 'axios';\r\nimport {useDispatch} from 'react-redux';\r\nimport {createSetAuthAction} from '../redux/action-creators';\r\nimport {trackPromise} from 'react-promise-tracker';\r\nimport Input  from './Input';\r\n\r\n\r\n\r\nfunction Login(props){\r\n \r\n    console.log(\"[Login] component\", props);\r\n    const [userName, setUserName] = useState(\"abc\");\r\n    const [password, setPassword] = useState(\"abc@123\");\r\n    const [message, setMessage] = useState(\"\");\r\n    const dispatch = useDispatch();\r\n\r\n    // const [state, setState] = useState({\r\n    //     userName: \"\", password: \"\"\r\n    // });\r\n\r\n    //useEffect(fn{callback}, [dependencies])\r\n    useEffect(() => {\r\n        console.log(\"This is a useEffect similar to the componentDidMount\");\r\n\r\n        return () => {\r\n            console.log(\"This is a useEffect similar to the componentWillUnMount\");\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n\r\n        console.log(\"This is a useEffect similar to the componentDidUpdate(userName)\");\r\n\r\n    }, [userName]);\r\n\r\n    useEffect(() => {\r\n\r\n        console.log(\"This is a useEffect similar to the componentDidUpdate(password)\");\r\n\r\n    }, [password]);\r\n\r\n    useEffect(() => {\r\n\r\n        console.log(\"This is a useEffect similar to the componentDidUpdate(userName,password)\");\r\n\r\n    }, [userName, password]);\r\n\r\n\r\n\r\n    async function login(){\r\n        console.log(`userName: ${userName}, password: ${password}`);\r\n        try {\r\n            const url = process.env.REACT_APP_LOGIN_URL;\r\n            const response \r\n                = await trackPromise(axios.post(url, {name: userName, password: password}));\r\n            console.log(response);\r\n            // dispatch({type: \"SET_AUTH\", payload: {\r\n            //     isAuthenticated: true,\r\n            //     accessToken: response.data.accessToken,\r\n            //     refreshToken: response.data.refreshToken\r\n            // }});\r\n            dispatch(createSetAuthAction({\r\n                    isAuthenticated: true,\r\n                    accessToken: response.data.accessToken,\r\n                    refreshToken: response.data.refreshToken\r\n            }));\r\n            setMessage(\"\");\r\n            props.history.push(\"/gadgets\");\r\n\r\n        } catch (error) {\r\n            console.log(\"Login Error\", error);\r\n            setMessage(\"Invalid Credentials\");\r\n            dispatch(createSetAuthAction( {\r\n                isAuthenticated: false,\r\n                accessToken: \"\",\r\n                refreshToken: \"\"\r\n            }));\r\n        }\r\n\r\n    }\r\n    return (\r\n        <div>\r\n            <h4>Login</h4>\r\n            <p></p>\r\n            {message ? <div className=\"alert alert-danger\">\r\n                {message}\r\n            </div> : null}\r\n\r\n            <Input value={userName} onChange={(e) => {setUserName(e.target.value)}}/>\r\n            <Input value={password} onChange={e => setPassword(e.target.value)}/>\r\n\r\n            {/* <div className=\"form-group\">\r\n                <label>UserName</label>\r\n                <input className=\"form-control\" value={userName} \r\n                                onChange={(e) => {setUserName(e.target.value)}}/>\r\n            </div>\r\n            \r\n\r\n            <div className=\"form-group\">\r\n                <label>Password</label>\r\n                <input className=\"form-control\" type=\"password\" value={password}\r\n                            onChange={e => setPassword(e.target.value)}/>\r\n            </div> */}\r\n            <br/>\r\n            <div>\r\n                <button className=\"btn btn-success\" onClick={login}>Login</button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default Login;","import { useEffect, useState } from \"react\";\r\nimport axios from 'axios';\r\nimport {useDispatch,useSelector} from 'react-redux';\r\n\r\nimport { createAddToCartAction, createGetProductsAction } from \"../redux/action-creators\";\r\nimport { useSnackbar } from 'notistack';\r\n\r\nfunction GadgetShop(){\r\n\r\n    //const [products, setProducts] = useState([]);\r\n    const [values, setValues] = useState(Array(10).fill(1));\r\n    const products = useSelector(state => state.cart.products)\r\n    const auth = useSelector(state => state.auth);\r\n    const dispatch = useDispatch();\r\n    const { enqueueSnackbar } = useSnackbar();\r\n    console.log(\"products\", products);\r\n    useEffect(() => {\r\n\r\n        //fetch();\r\n        fetchFromStore();\r\n\r\n    }, []);\r\n\r\n    function fetchFromStore(){\r\n\r\n        dispatch(createGetProductsAction(auth.accessToken));\r\n    }\r\n\r\n    async function fetch(){\r\n        const url = process.env.REACT_APP_PRODUCTS_URL;\r\n        try {\r\n\r\n            const resp = await axios.get(url);\r\n            console.log(resp);\r\n            //setProducts(resp.data);\r\n            \r\n\r\n        } catch (error) {\r\n            console.log(\"error\", error);\r\n        }\r\n    }\r\n    \r\n    function setQuantity(e, index){\r\n\r\n        const updatedValues = [...values];\r\n        updatedValues[index] = e.target.value;\r\n        setValues(updatedValues);\r\n    }\r\n    function addToCart(product, index){\r\n\r\n        console.log(\"addtocart\", product, values[index]);\r\n        // dispatch({\r\n        //     type: \"ADDTOCART\",\r\n        //     payload: {product: product, quantity: values[index]}\r\n        // });\r\n        dispatch(createAddToCartAction( {product: product, quantity: values[index]}));\r\n        //alert(\"Added to cart\");\r\n        enqueueSnackbar(`Added ${product.name} to the cart`, {variant: 'success'});\r\n\r\n    }\r\n\r\n    function renderProducts() {\r\n\r\n        const productsView =  products.map((item, index) => {\r\n            return (\r\n                <div className=\"col\" key={index} >\r\n                    <div className=\"card border-warning\" >\r\n                        <div className=\"card-body text-success\">\r\n                            <h5 className=\"card-title\">{item.name}</h5>\r\n                            <p className=\"card-text\">{item.description}</p>\r\n                            <p className=\"card-text text-primary\">INR {item.price}</p>\r\n                            <input className=\"form-control\" \r\n                                        type=\"number\" placeholder=\"Quantity\" \r\n                                        value={values[index]}\r\n                                        onChange={(e) => setQuantity(e, index)}/> \r\n\r\n                            <button href=\"#\" className=\"btn btn-primary\" \r\n                                                    onClick={() => addToCart(item, index)}>Add To Cart</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        })\r\n        return (\r\n            <div className=\"row row-cols-1 row-cols-md-2 g-4\">\r\n                {productsView}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h4>Gadget Store</h4>\r\n            {renderProducts()}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GadgetShop;","\r\n//HOC ==> is a function which returns a component\r\nconst withBorder = (Component) => {\r\n\r\n    //return a component\r\n    return (props) => {\r\n\r\n        return (\r\n            <div style={{border: \"2px solid red\"}}>\r\n                <Component {...props}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withBorder;","import withBorder from \"./WithBorderHOC\";\r\n\r\nfunction Hello(props){\r\n    return (\r\n        <div>\r\n            <h3>Hello React</h3>\r\n            <p>Message: {props.message.toUpperCase()}</p>\r\n            <p>Created DateTime: {new Date().toISOString()}</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default withBorder(Hello);","import React, {Component} from 'react';\r\nimport withBorder from './WithBorderHOC';\r\n\r\nclass Counter extends Component{\r\n\r\n    state = {\r\n        count: 10,\r\n        message: \"test\"\r\n    }\r\n    inputRef = React.createRef();\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.decr = this.decr.bind(this);\r\n\r\n        // ES6\r\n        // this.state = {\r\n        //     count: 10,\r\n        //     message: \"test\"\r\n        // }\r\n    }\r\n\r\n    //event handler == Arrow functions\r\n    inc = (evt) => {\r\n        \r\n        console.log(\"event\", evt);\r\n\r\n        //this.state.count++;\r\n        const updatedCount = this.state.count + 1;\r\n        //setState is async\r\n        //this.setState(slice of the updated state, callback);\r\n        this.setState({\r\n            count: updatedCount\r\n        }, () => {\r\n            console.log(\"count\", this.state.count);\r\n        });\r\n        \r\n    }\r\n    //event handler == bind function\r\n    decr(){\r\n\r\n        console.log(this)\r\n        //this.state.count++;\r\n        const updatedCount = this.state.count - 1;\r\n        //setState is async\r\n        //this.setState(slice of the updated state, callback);\r\n        this.setState({\r\n            count: updatedCount\r\n        }, () => {\r\n            console.log(\"count\", this.state.count);\r\n        });\r\n    }\r\n    change = (evt) => {\r\n        \r\n        const updateCount = evt.target.value;\r\n        this.setState({\r\n            count: updateCount ?  parseInt(updateCount) : 0\r\n        });\r\n    }\r\n    update  = () => {\r\n\r\n        if(this.inputRef.current.value)\r\n        {\r\n            this.setState({\r\n                count: parseInt(this.inputRef.current.value)\r\n            });\r\n        }\r\n        \r\n    }\r\n    render() {\r\n        return ( \r\n            <div>\r\n                <h4 id=\"title\">Counter: {this.state.count}</h4>\r\n                <p>Message: {this.props.message}</p>\r\n                <div>\r\n                    {/* <button onclick=\"foo()\">Inc</button> */}\r\n                    <button onClick={this.inc}>Inc</button>\r\n                </div>\r\n                <div>\r\n                    <button onClick={this.decr}>Decr</button>\r\n                </div>\r\n                <div>\r\n                    {/* Controlled input */}\r\n                    Count: <input id=\"value\" type=\"number\" \r\n                                placeholder=\"Count\"\r\n                                value={this.state.count} onChange={this.change}/>\r\n                </div>\r\n                <div>\r\n                    {/* Uncontrolled input */}\r\n                    Count: <input type=\"number\" ref={this.inputRef} placeholder=\"Update Count\"/>\r\n                    <button onClick={this.update}>Update</button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withBorder(Counter);","import React, { PureComponent } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { createRemoveCartItemAction } from '../redux/action-creators';\r\n\r\nclass ViewCart extends PureComponent {\r\n\r\n    remove = (prdId) => {\r\n\r\n        this.props.removeCartItem(prdId);\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                <h3>Cart</h3>\r\n\r\n                <div className=\"row row-cols-1 row-cols-md-2 g-4\">\r\n                    {this.props.cart.map((item, index) => {\r\n                    return (\r\n                        <div className=\"col\" key={index}>\r\n                            <div className=\"card bg-light mb-3 border-success\">\r\n                                <p className=\"card-header\">{item.product.name}</p>\r\n                                <div className=\"card-body\">\r\n                                    <p className=\"card-text\">{item.product.description}</p>\r\n                                    <p className=\"card-text\">Quantity: {item.quantity}</p>\r\n                                </div>\r\n                                <div className=\"card-footer\">\r\n                                    <button className=\"btn btn-success\" \r\n                                                onClick={() => this.remove(item.product.id)}>Remove</button>\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                })}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n//map the redux state to the component props\r\nconst mapStateToProps = (reduxState) => {\r\n\r\n    return {\r\n        cart: reduxState.cart.cart,\r\n\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n\r\n        //removeCartItem: (id) => {dispatch({type: \"REMOVECARTITEM\", productId: id })}\r\n        removeCartItem: (id) => {dispatch(createRemoveCartItemAction(id))}\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ViewCart);\r\n//export default ViewCart;","import React from 'react';\r\nimport Login from './components/Login';\r\nimport UseCallbackDemo from './components/UseCallbackDemo';\r\nimport GadgetShop from './components/GadgetShop';\r\nimport Hello from './components/Hello';\r\nimport Counter from './components/Counter';\r\nimport ViewCart from './components/ViewCart';\r\n\r\nconst ListProducts = React.lazy(() => import('./components/ListProducts'));\r\n\r\nexport const routes = [\r\n\r\n    {\r\n        component: Login,\r\n        title: \"Login\",\r\n        icon: \"\",\r\n        path: \"/login\",\r\n        secure: false\r\n    },\r\n    {\r\n        component: Hello,\r\n        title: \"Home\",\r\n        icon: \"\",\r\n        path: \"/home\",\r\n        secure: false\r\n    },\r\n    {\r\n        component: Counter,\r\n        title: \"Counter\",\r\n        icon: \"\",\r\n        path: \"/counter\",\r\n        secure: false\r\n    },\r\n    {\r\n        component: ListProducts,\r\n        title: \"Products\",\r\n        icon: \"\",\r\n        path: \"/products\",\r\n        secure: true\r\n    },\r\n    {\r\n        component: GadgetShop,\r\n        title: \"Gadgets\",\r\n        icon: \"\",\r\n        path: \"/gadgets\",\r\n        secure: true\r\n    },\r\n    {\r\n        component: ViewCart,\r\n        title: \"Cart\",\r\n        icon: \"\",\r\n        path: \"/cart\",\r\n        secure: true\r\n    }\r\n]","import { Route, Redirect } from \"react-router-dom\";\r\nimport { useSelector } from 'react-redux';\r\n\r\nfunction ProtectedRoute(props) {\r\n\r\n    const { path, component } = props;\r\n    const isAuthenticated = useSelector(state => state.auth.isAuthenticated);\r\n\r\n    if (isAuthenticated === true) {\r\n        return (\r\n            <Route path={path} component={component} />\r\n        )\r\n    }\r\n    else {\r\n        return (\r\n            <Route path={path}>\r\n                <Redirect to=\"/login\" />\r\n            </Route>\r\n        )\r\n    }\r\n}\r\nexport default ProtectedRoute;","import React, { useState, Suspense } from \"react\";\r\nimport { Grid } from '@mui/material';\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Box from '@mui/material/Box';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport Typography from '@mui/material/Typography';\r\nimport Button from '@mui/material/Button';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\nimport Drawer from '@mui/material/Drawer';\r\nimport List from '@mui/material/List';\r\nimport Divider from '@mui/material/Divider';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemIcon from '@mui/material/ListItemIcon';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport InboxIcon from '@mui/icons-material/MoveToInbox';\r\nimport MailIcon from '@mui/icons-material/Mail';\r\nimport ChevronLeftIcon from '@mui/icons-material/ChevronLeft';\r\nimport ChevronRightIcon from '@mui/icons-material/ChevronRight';\r\nimport { routes } from '../routes';\r\nimport { BrowserRouter as Router, Route, useHistory } from 'react-router-dom';\r\nimport ProtectedRoute from './ProtectedRoute';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\nconst drawerWidth = 240;\r\n\r\nfunction AppNavigationList(props) {\r\n\r\n    const history = useHistory();\r\n    const {renderSecure} = props;\r\n\r\n    function navigate(item) {\r\n\r\n        history.push(item.path);\r\n        props.onSelect(false);\r\n    }\r\n\r\n    return (\r\n        <List>\r\n            {routes.map((item, index) => {\r\n\r\n                \r\n                if (renderSecure === \"N\" && item.secure === false) {\r\n                    return (\r\n                        <ListItem button key={index} onClick={() => { navigate(item) }}>\r\n                            <ListItemIcon>\r\n                                {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={item.title} />\r\n                        </ListItem>\r\n                    )\r\n                }\r\n                else if (renderSecure === \"Y\" && item.secure === true) {\r\n                    return (\r\n                        <ListItem button key={index} onClick={() => { navigate(item) }}>\r\n                            <ListItemIcon>\r\n                                {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={item.title} />\r\n                        </ListItem>\r\n                    )\r\n                }\r\n                else {\r\n                    return null\r\n                }\r\n            })}\r\n        </List>\r\n    );\r\n\r\n}\r\n\r\nfunction App(props) {\r\n\r\n    const [drawerState, setDrawerState] = useState(false);\r\n\r\n    \r\n\r\n    return (\r\n\r\n        <Router>\r\n            <Grid container spacing={2}>\r\n                <Grid item xs={12}>\r\n                    <AppBar position=\"static\">\r\n                        <Toolbar>\r\n                            <IconButton\r\n                                size=\"large\"\r\n                                edge=\"start\"\r\n                                color=\"inherit\"\r\n                                aria-label=\"menu\"\r\n                                sx={{ mr: 2 }}\r\n                                onClick={() => setDrawerState(true)}\r\n                            >\r\n                                <MenuIcon />\r\n                            </IconButton>\r\n                            <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\r\n                                React\r\n                            </Typography>\r\n                            <Button color=\"inherit\">Login</Button>\r\n                        </Toolbar>\r\n                    </AppBar>\r\n                    <Drawer\r\n                        sx={{\r\n                            width: drawerWidth,\r\n                            flexShrink: 0,\r\n                            '& .MuiDrawer-paper': {\r\n                                width: drawerWidth,\r\n                                boxSizing: 'border-box',\r\n                            },\r\n                        }}\r\n                        variant=\"temporary\"\r\n                        anchor=\"left\"\r\n                        open={drawerState}\r\n                        onClose={() => setDrawerState(false)}\r\n                    >\r\n\r\n                        <IconButton onClick={() => setDrawerState(false)}>\r\n                            <ChevronLeftIcon />\r\n                            {/* {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />} */}\r\n                        </IconButton>\r\n\r\n                        <Divider />\r\n                            <AppNavigationList onSelect={setDrawerState} renderSecure=\"N\"/>\r\n                        <Divider />\r\n                            <AppNavigationList onSelect={setDrawerState} renderSecure=\"Y\"/>\r\n                        {/* <List>\r\n                            {routes.map((item, index) => {\r\n\r\n                                if (item.secure === true) {\r\n                                    return (\r\n                                        <ListItem button key={index}>\r\n                                            <ListItemIcon>\r\n                                                {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\r\n                                            </ListItemIcon>\r\n                                            <ListItemText primary={item.title} />\r\n                                        </ListItem>\r\n                                    )\r\n                                }\r\n                                else {\r\n                                    return null;\r\n                                }\r\n                            })}\r\n                        </List> */}\r\n                    </Drawer>\r\n                </Grid>\r\n\r\n                <Grid item xs={12}>\r\n\r\n                    <Suspense fallback={<div>Loading....</div>}>\r\n                        {routes.map((item, index) => {\r\n\r\n                            if (item.secure === false) {\r\n                                return (\r\n                                    <Route path={item.path} component={item.component} />\r\n                                );\r\n                            }\r\n                            else {\r\n                                return (\r\n                                    <ProtectedRoute path={item.path} component={item.component} />\r\n                                );\r\n                            }\r\n                        })}\r\n                    </Suspense>\r\n                </Grid>\r\n            </Grid>\r\n        </Router>\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","//redux\r\n\r\n\r\nimport {createStore, combineReducers, applyMiddleware, compose} from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\n//initial state\r\nconst authState = {\r\n    isAuthenticated: false,\r\n    accessToken: \"\",\r\n    refreshToken: \"\"\r\n}\r\nconst cartState = {\r\n    cart : [],\r\n    products: []\r\n}\r\n//reducer -- Has to be Synchronous functions\r\nconst authReducer = (currentState=authState, action)=> {\r\n\r\n    if(action.type === \"SET_AUTH\"){\r\n        return {\r\n            ...action.payload\r\n        }\r\n    }\r\n    return currentState;\r\n}\r\nconst cartReducer = (currentState=cartState, action)=> {\r\n\r\n    if(action.type === \"ADDTOCART\"){\r\n\r\n        const cart = [...currentState.cart];\r\n        cart.push(action.payload);\r\n        return {\r\n\r\n            ...currentState,\r\n            cart: cart\r\n        };\r\n    }\r\n    if(action.type === \"REMOVECARTITEM\"){\r\n\r\n        const cart = [...currentState.cart];\r\n        const index = cart.findIndex(item => item.product.id === action.productId);\r\n        if(index !== -1){\r\n            cart.splice(index, 1);\r\n        }\r\n        return {\r\n            ...currentState,\r\n            cart: cart\r\n        };\r\n    }\r\n    if(action.type === \"GETPRODUCTS\"){\r\n\r\n        return {\r\n            ...currentState,\r\n            products: action.payload\r\n        }\r\n    }\r\n    return currentState;\r\n}\r\n\r\n//middleware\r\n\r\nconst logMiddleware = (store) => {\r\n    return (next) => { \r\n        return (action) => {\r\n            console.log(\"Prev State\", store.getState());\r\n            console.log(\"Action\", action);\r\n            const result = next(action);\r\n            console.log(\"Updated State\", store.getState());\r\n            return result;\r\n        }\r\n    }\r\n}\r\n\r\n\r\n//store\r\n// export const store = createStore(authReducer, \r\n//                         window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\r\n\r\n// export const store = createStore(combineReducers({auth: authReducer, cart: cartReducer}), \r\n//     window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\r\n\r\n// export  const store = createStore(\r\n//                         combineReducers({auth: authReducer, cart: cartReducer}), \r\n//                         applyMiddleware(logMiddleware));\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nexport  const store = createStore(\r\n                        combineReducers({auth: authReducer, cart: cartReducer}), \r\n                        composeEnhancers(applyMiddleware(logMiddleware, thunk)));","import React from 'react';\r\n\r\n\r\nexport const AppTheme = React.createContext();","import { AppTheme } from \"./AppTheme\";\r\nimport {useReducer} from 'react';\r\n\r\nconst initThemeState = {\r\n    mode: 'light'\r\n }\r\n\r\n const reducer = (currentState, action)=> {\r\n\r\n    if(action.type === \"DARK\"){\r\n        return {\r\n            mode: 'dark'\r\n        }\r\n    }\r\n    if(action.type === \"LIGHT\"){\r\n        return {\r\n            mode: 'light'\r\n        }\r\n    }\r\n    return currentState;\r\n }\r\n\r\nfunction AppThemeProvider(props){\r\n\r\n    const [state, dispatch ] = useReducer(reducer, initThemeState);\r\n\r\n    return (\r\n        <AppTheme.Provider value={{state: state, dispatch: dispatch}}>\r\n                {props.children}\r\n        </AppTheme.Provider>\r\n    )\r\n}\r\n\r\nexport default AppThemeProvider;","import React, { Component } from 'react';\r\nimport { usePromiseTracker } from \"react-promise-tracker\";\r\n\r\nexport const LoadingSpinnerComponent = (props) => {\r\n\r\n    const { promiseInProgress } = usePromiseTracker();\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                (promiseInProgress === true) ?\r\n                    <h3>Loading, Please wait...</h3>\r\n                    :\r\n                    null\r\n            }\r\n        </div>\r\n    )\r\n};","import React, { Component } from \"react\";\r\n\r\nclass AppErrorBoundary extends Component {\r\n\r\n    state = {\r\n        hasError: false\r\n    }\r\n    componentDidCatch(error, info) {\r\n\r\n        if (error) {\r\n            this.setState({\r\n                hasError: true\r\n            }, () => {\r\n                console.log(\"Error Info\", info)\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        if (this.state.hasError === true) {\r\n\r\n            return (\r\n                <div className=\"alert alert-danger\">\r\n                    Something went wrong. Please try again...\r\n                </div>\r\n            )\r\n        }\r\n        else {\r\n            return (\r\n                this.props.children\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default AppErrorBoundary;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n//import App from './App';\nimport App from './components/MuiApp';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport { store } from './redux/store';\nimport { AppTheme } from './context/AppTheme';\nimport AppThemeProvider from './context/AppThemeProvider';\nimport { LoadingSpinnerComponent } from './components/LoadingSpinnerComponent';\nimport { SnackbarProvider } from 'notistack';\nimport AppErrorBoundary from './components/AppErrorBoundary';\n\nconst initTheme = {\n  mode: 'dark'\n}\n\n\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <AppTheme.Provider value={initTheme}>\n//       <Provider store={store}>\n//         <App />\n//       </Provider>\n//     </AppTheme.Provider>\n//   </React.StrictMode>,\n//   document.getElementById('root')\n// );\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <AppThemeProvider>\n      <Provider store={store}>\n        <SnackbarProvider maxSnack={3} anchorOrigin={{\n          vertical: 'top',\n          horizontal: 'right',\n        }}>\n          <AppErrorBoundary>\n              <App />\n          </AppErrorBoundary>\n\n        </SnackbarProvider>\n        <LoadingSpinnerComponent />\n      </Provider>\n    </AppThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}